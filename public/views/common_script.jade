script.
  var socket = io.connect(!{socket_address});

  socket.on("error", function(err) {
    console.log("socket.io error: ", err);
  });
  socket.on("error_msg", function (json) {
    alertify.error(json.msg, "", 3000);
  });
  socket.on("refresh", function (json) {
    window.location.reload();
  });
  socket.on("signup", function (user_id) {
    mixpanel.alias(user_id);
    inspectlet_tag("signup");

    setTimeout(function() {
      window.location.reload();
    }, 100);
  });
  socket.on("personal_stats", function (json) {
    update_personal_stats(json);
  });
  socket.on("current_stats", function (json) {
    refresh_current_stats(json);
  });
  socket.on("past_winners", function (json) {
    refresh_past_winners(json);
  });
  socket.on("current_bets", function (json) {
    // refresh_current_bets(json);
  });
  socket.on("round_end", function (past_winner_data) {
    end_round(past_winner_data);
  });
  socket.on("round_new", function (json) {
    new_round();
  });
  socket.on("time_added", function (time_added_seconds) {
    alertify.log("<b>"+time_added_seconds+" second"+(time_added_seconds === 1 ? "" : "s")+"</b> added to round.");
  });
  socket.on("player_list", function (user_id_names) {
    socketConnectedUserIdNames = user_id_names;
  });

  socket.on("chat_message", function (json) {
    add_message_to_chat(json.user_name, json.message);
    play_sound('audio/chat.mp3');
  });
  socket.on("chat_history", function (json) {
    var chat_body_sel = "#chat_body"; // TODO: DRY
    $(chat_body_sel).html("");

    $.each(json.messages.reverse(), function(ii, message) {
      add_message_to_chat(message.user_name, message.message, false);
    });
    scroll_chat_to_bottom();
  });

  socket.on("referral_signup", function (json) {
    var msg = "";

    msg += "A new user, <b><i>"+json.user_name+"</i></b> ";
    msg += "just signed up as your referral!<br/><br/>";
    msg += "Now you will earn a commission every time they win!";

    alertify.log(msg, "", 0);
  });

  socket.on("referral_commission", function (json) {
    var msg = "";

      msg += "A user you referred, <b><i>"+json.winner_name+"</i></b> ";
      msg += "just won!<br/><br/>";
      msg += "We've added <b>"+json.amount+"</b> satoshis to your account!";

    alertify.log(msg, "", 0);
  });

  socket.on("deposit_confirmations", function (json) {
    var cc  = json.current_confirmations;
    var nc  = json.needed_confirmations;
    var amt = json.amount;

    var time_ms = 20000;
    var msg     = "<b>Your deposit of à¸¿"+to_btc_str(amt)+" ";

    if(cc >= nc) {
      msg += "has been added to your account!";
      time_ms = 0;
    }
    else {
      if(cc === 0) {
        msg     += "has been received. ";
        time_ms  = 0;
      }
      else {
        msg += "is in the process of being confirmed. ";
      }
      msg += "<br/><br/>"+cc+"/"+nc+" confirmations completed."
    }
    msg += "</b>";

    alertify.success(msg, time_ms);
  });


script#inspectletjs.
  /* Begin Inspectlet Embed Code */
  window.__insp = window.__insp || [];
  __insp.push(['wid', 1886676085]);
  (function() {
    function __ldinsp(){var insp = document.createElement('script'); insp.type = 'text/javascript'; insp.async = true; insp.id = "inspsync"; insp.src = ('https:' == document.location.protocol ? 'https' : 'http') + '://cdn.inspectlet.com/inspectlet.js'; var x = document.getElementsByTagName('script')[0]; x.parentNode.insertBefore(insp, x); }
    if (window.attachEvent){
      window.attachEvent('onload', __ldinsp);
    }else{
      window.addEventListener('load', __ldinsp, false);
    }
  })();

script.
  /* Google Analytics */
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-47822938-1', 'bitsplit.it');
  ga('send', 'pageview');

  /* SessionCam Client Integration v6.0 */
  //<![CDATA[
  var scRec=document.createElement('SCRIPT');
  scRec.type='text/javascript';
  scRec.src="//d2oh4tlt9mrke9.cloudfront.net/Record/js/sessioncam.recorder.js";
  document.getElementsByTagName('head')[0].appendChild(scRec);
  //]]>
  /* End SessionCam */

  /* start Mixpanel */
  (function(f,b){if(!b.__SV){var a,e,i,g;window.mixpanel=b;b._i=[];b.init=function(a,e,d){function f(b,h){var a=h.split(".");2==a.length&&(b=b[a[0]],h=a[1]);b[h]=function(){b.push([h].concat(Array.prototype.slice.call(arguments,0)))}}var c=b;"undefined"!==typeof d?c=b[d]=[]:d="mixpanel";c.people=c.people||[];c.toString=function(b){var a="mixpanel";"mixpanel"!==d&&(a+="."+d);b||(a+=" (stub)");return a};c.people.toString=function(){return c.toString(1)+".people (stub)"};i="disable track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config people.set people.set_once people.increment people.append people.track_charge people.clear_charges people.delete_user".split(" ");
  for(g=0;g<i.length;g++)f(c,i[g]);b._i.push([a,e,d])};b.__SV=1.2;a=f.createElement("script");a.type="text/javascript";a.async=!0;a.src="//cdn.mxpnl.com/libs/mixpanel-2.2.min.js";e=f.getElementsByTagName("script")[0];e.parentNode.insertBefore(a,e)}})(document,window.mixpanel||[]);
  mixpanel.init("60c91307870792ac255f2afcd53c2878");
  /* end Mixpanel */
